C51 COMPILER V9.60.7.0   CLOCK                                                             11/30/2023 13:52:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Objects\clock.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE clock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\clock.
                    -lst) TABS(2) OBJECT(.\Objects\clock.obj)

line level    source

   1          #include"lcd.h"
   2          #include"clock.h"
   3          #include"delay.h"
   4          #include"show_temp.h"
   5          #include"DS18B20.h"
   6          uchar time_str[]="The time is";
   7          uchar lcd_clock[]={0x30,0x30,0x3a,0x30,0x30,0x3a,0x30,0x30};
   8          sbit K1=P3^1;
   9          sbit K2=P3^0;
  10          sbit K3=P3^2;
  11          
  12          static uint second,min,hour;
  13          //定时器中断初始化
  14          void ExitInit()
  15          {
  16   1        TMOD=0x01;//TMOD配置，0x01为不受干扰定时器
  17   1        EA=1;//总中断允许
  18   1        ET0=1;//定时器中断允许
  19   1        TR0=1;//中断控制开关，定时器0开始计算
  20   1        TH0=0xFC;//设置初值64535/256 
  21   1        TL0=0x18;//64535%256
  22   1        P0=0x00;
  23   1      }
  24          //外部中断初始化
  25          void ExitInit_isr()
  26          {
  27   1        EA=1;
  28   1        EX0=1;
  29   1        IT0=1;//边沿触发
  30   1        EX1=1;
  31   1        IT1=0;//电平触发
  32   1      }
  33          
  34          void show_clock()
  35          {
  36   1        unsigned char i;
  37   1        //unsigned char code name[]="0303/0304:";
  38   1        InitLcd1602();
  39   1        ExitInit();
  40   1        ExitInit_isr();
  41   1        Lcd1602_Write_Cmd(0x80);//指明首地址
  42   1        ShowStr(time_str);//显示字符串
  43   1        while(1)
  44   1        {
  45   2          if(EA==1)
  46   2          {
  47   3          for(i=0;i<8;i++)
  48   3          {
  49   4            Lcd1602_Write_Cmd(0xc4+i);
  50   4            Lcd1602_Write_Data(lcd_clock[i]);
  51   4          }
  52   3          
  53   3          }
  54   2          else
C51 COMPILER V9.60.7.0   CLOCK                                                             11/30/2023 13:52:19 PAGE 2   

  55   2          {
  56   3            InitLcd1602();
  57   3            K4=1;
  58   3            show_init();
  59   3            break;
  60   3          }
  61   2        }
  62   1        return;
  63   1      }
  64          
  65          
  66          //外部中断服务程序
  67          void int0_isr(void) interrupt 0
  68          {
  69   1        
  70   1        while(!TR0)
  71   1        {
  72   2          if(K2==0)
  73   2          {
  74   3            delay1ms(50);
  75   3            if(K2==0)
  76   3            {
  77   4              hour++;
  78   4              if(hour==24)
  79   4                {
  80   5                  hour=0;
  81   5                }
  82   4                Lcd1602_Write_Cmd(0xc4+0);
  83   4                lcd_clock[0]=hour/10+0x30;
  84   4                Lcd1602_Write_Data(lcd_clock[0]);
  85   4                Lcd1602_Write_Cmd(0xc4+1);
  86   4                lcd_clock[1]=hour%10+0x30;
  87   4                Lcd1602_Write_Data(lcd_clock[1]);
  88   4            }
  89   3          }
  90   2          if(K3==0)
  91   2            {
  92   3              delay1ms(50);
  93   3              if(K3==0)
  94   3                {
  95   4                  min++;
  96   4                  if(min==60)
  97   4                    {
  98   5                      min=0;
  99   5                    }
 100   4                    Lcd1602_Write_Cmd(0xc4+3);
 101   4                    lcd_clock[3]=min/10+0x30;
 102   4                    Lcd1602_Write_Data(lcd_clock[3]);
 103   4                    Lcd1602_Write_Cmd(0xc4+4);
 104   4                    lcd_clock[4]=min%10+0x30;
 105   4                    Lcd1602_Write_Data(lcd_clock[4]);
 106   4                }
 107   3            }
 108   2            if(K4==0)
 109   2          {
 110   3            TR0=1;
 111   3          }
 112   2          
 113   2        }
 114   1        if(K3==0)
 115   1        {
 116   2          EA=0;
C51 COMPILER V9.60.7.0   CLOCK                                                             11/30/2023 13:52:19 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          void int1_isr(void) interrupt 2
 121          {
 122   1        if(K4==0)
 123   1        {
 124   2          TR0=1;
 125   2        }
 126   1      }
 127          
 128          //定时器中断服务程序
 129          void Timer0() interrupt 1
 130          {
 131   1        static uint timer;
 132   1        TH0=0xFC;//给定时器赋初值
 133   1        TL0=0x18;
 134   1        
 135   1        ES=1;
 136   1        
 137   1        if(K1==0)
 138   1        {
 139   2          TR0=0;
 140   2          K3=1;
 141   2          K3=0;
 142   2          K3=1;
 143   2        }
 144   1      
 145   1        timer++;
 146   1        if(timer==1000)//判断是否到达1s
 147   1        {
 148   2          timer=0;
 149   2          second++;
 150   2          if(second==60)
 151   2          {
 152   3          second=0;
 153   3          min++;
 154   3            if(min==60)
 155   3            {
 156   4            min=0;
 157   4            hour++;
 158   4              if(hour==24)
 159   4              {
 160   5               second=0;
 161   5               min=0;
 162   5               hour=0;
 163   5              } 
 164   4           }
 165   3          }
 166   2        }
 167   1        lcd_clock[0]=hour/10+0x30;
 168   1        lcd_clock[1]=hour%10+0x30;
 169   1        lcd_clock[3]=min/10+0x30;
 170   1        lcd_clock[4]=min%10+0x30;
 171   1        lcd_clock[6]=second/10+0x30;
 172   1        lcd_clock[7]=second%10+0x30;
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    577    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   CLOCK                                                             11/30/2023 13:52:19 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
